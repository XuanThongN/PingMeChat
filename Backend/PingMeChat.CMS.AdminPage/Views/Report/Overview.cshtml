@{
    ViewData["Title"] = "Báo cáo tổng quan";
}


@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>*@
@*<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>*@
@section scripts{
    <script src="~/libs/chart/chart.umd.min.js" asp-append-version="true"></script>
    <script src="~/lb-views/report/index.js" asp-append-version="true"> </script>
    @*<script src="~/lb-views/report/overview.js" asp-append-version="true"> </script>*@
}
@section styles{
    <link rel="stylesheet" href="~/lb-views/report/overview.css" />
}



<div class="container-fluid">
    <div class="content">
        <div class="header">
            <div class="card">
                <div class="row">
                    @*<div class="col-md-4">
                    <select id="timeRange" class="form-select" onchange="updateChart()">
                    <option value="today">Hôm nay</option>
                    <option value="yesterday">Hôm qua</option>
                    <option value="thisWeek">Tuần này</option>
                    <option value="thisMonth">Tháng này</option>
                    <option value="custom">Tùy chỉnh</option>
                    </select>
                    </div>*@
                    <div class="col-md-12 form-group" id="customDateRange">
                       @* <label for="startDate">Từ ngày</label>
                        <input type="date" id="startDate" class="form-control d-inline-block w-auto">
                        <label for="endDate">Đến ngày</label>
                        <input type="date" id="endDate" class="form-control d-inline-block w-auto">
                        <button class="btn btn-primary btn-sm" id="applyDateRange" style="padding: 5px 20px !important">Áp dụng</button>
                        <div id="dateError" class="text-danger mt-2"></div>*@
                      
                        @*<input type="text" id="reservationtime" class="form-control d-inline-block w-50">*@
                        <div class="input-group ">
                            <label for="startDate" class="d-flex align-items-center ">Từ ngày - đến ngày</label>
                            <div class="input-group-prepend ml-3">
                                <span class="input-group-text"><i class="far fa-clock"></i></span>
                            </div>
                            <input type="text" class="form-control float-right" id="reservationtime">
                        </div>
                        @*<label for="endDate">Đến ngày</label>
                        <input type="date" id="endDate" class="form-control d-inline-block w-auto">
                        <button class="btn btn-primary btn-sm" id="applyDateRange" style="padding: 5px 20px !important">Áp dụng</button>
                        <div id="dateError" class="text-danger mt-2"></div>*@
                    </div>
                </div>

            </div>
        </div>
        <div class="card">
            <div class="row">
                @* <div class="col-md-3">
                <div class="summary-box">
                <h6>CHI PHÍ</h6>
                <h3 id="totalCost">1. 970.000 vnđ</h3>
                </div>
                </div>*@
                <div class="col-12 col-sm-6 col-md-12">
                    <div class="info-box">
                        <span class="info-box-icon bg-info elevation-1">
                            <i class="fas fa-wallet"></i>
                        </span>
                        <div class="info-box-content">
                            <p class="text-success">Áp dụng đơn hàng hoàn thành - khách hàng đã thanh toán</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text fs-4">Tổng tiền đã thu</span>
                                <span class="info-box-number" id="totalMoney">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Tổng tiền mặt</span>
                                <span class="info-box-number" id="totalCash">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Tổng tiền chuyển khoản</span>
                                <span class="info-box-number" id="totalTranfer">0</span>
                            </div>

                        </div>
                        <!-- /.info-box-content -->
                    </div>
                    <!-- /.info-box -->
                </div>
                <div class="col-12 col-sm-6 col-md-4">
                    <div class="info-box">
                        <span class="info-box-icon bg-primary elevation-1">
                            <i class="fas fa-truck-moving"></i>
                        </span>
                        <div class="info-box-content">
                            <p class="text-primary">Số lượng đơn hàng</p>

                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text fs-4">Tổng  bill</span>
                                <span class="info-box-number" id="totalOrders">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Tổng bill hoàn thành</span>
                                <span class="info-box-number" id="totalOrderDone">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Tổng bill đang nợ</span>
                                <span class="info-box-number" id="totalOrderDebt">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Tổng bill đã hủy</span>
                                <span class="info-box-number" id="totalOrderCancel">0</span>
                            </div>
                        </div>
                        <!-- /.info-box-content -->
                    </div>
                    <!-- /.info-box -->
                </div>
                <div class="col-12 col-sm-6 col-md-4">
                    <div class="info-box">
                        <span class="info-box-icon bg-success elevation-1">
                            <i class="fas fa-money-check-alt"></i>

                        </span>
                        <div class="info-box-content">
                            <p class="text-success">Áp dụng đơn hàng hoàn thành</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text fs-4">Lợi nhuận</span>
                                <span class="info-box-number" id="profitDone">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Doanh thu</span>
                                <span class="info-box-number" id="totalRevenueDone">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Giảm giá</span>
                                <span class="info-box-number" id="totalDiscountDone">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Vốn (hàng)</span>
                                <span class="info-box-number" id="totalPurchaseCostDone">0</span>
                            </div>
                        </div>
                        <!-- /.info-box-content -->
                    </div>
                    <!-- /.info-box -->
                </div>
                <div class="col-12 col-sm-6 col-md-4">
                    <div class="info-box">
                        <span class="info-box-icon bg-warning elevation-1">
                            <i class="fas fa-credit-card"></i>
                        </span>
                        <div class="info-box-content">
                            <p class="text-warning">Áp dụng đơn hàng đang nợ</p>

                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text fs-4">Lợi nhuận </span>
                                <span class="info-box-number" id="profitDebt">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Doanh thu</span>
                                <span class="info-box-number" id="totalRevenueDebt">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Giảm giá</span>
                                <span class="info-box-number" id="totalDiscountDebt">0</span>
                            </div>
                            <div class="d-flex justify-content-between align-items-center">
                                <span class="info-box-text">Vốn (hàng)</span>
                                <span class="info-box-number" id="totalPurchaseCostDebt">0</span>
                            </div>
                        </div>
                        <!-- /.info-box-content -->
                    </div>
                    <!-- /.info-box -->
                </div>
               
            </div>

            @*  <div class="chart-container">
            <canvas id="revenueChart"></canvas>
            </div>*@

        </div>
        <div class="card">
            <h5>Thống kê doanh thu trên hóa đơn <i>(áp dụng đơn hoàn thành)</i></h5>
            <div class="mb-3">
                @*<input type="date" id="reportDate" class="form-control d-inline-block w-auto">
                <button class="btn btn-custom" onclick="generateReport()">Xem</button>*@
                <button class="btn btn-custom" onclick="exportReport()">Xuất báo cáo</button>
            </div>
            <table id="dailyReportTable">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Ngày</th>
                        <th>Tiền bàn</th>
                        <th>Bán sản phẩm</th>
                        <th>Chi phí mua SP</th>
                        <th>Tổng giám giá</th>
                        <th>Lợi nhuận gộp</th>
                        <th>Trạng thái</th>

                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
        @*  <div class="card">
        <h5>Công suất bàn sử dụng</h5>
        <div class="mb-3">
        </div>
        <table id="bidaTable">
        <thead>
        <tr>
        <th>STT</th>
        <th>Loại bàn</th>
        <th>Mã bàn</th>
        <th>Giá/giờ</th>
        <th>Thời lượng sử dụng</th>
        <th>Thời lượng thực tế</th>
        <th>Công suất sử dụng</th>
        <th>Đánh giá</th>
        </tr>
        </thead>
        <tbody>

        </tbody>
        </table>
        </div>*@
        <div class="card">
            <h5>Thống kê doanh thu sản phẩm</h5>
            <div class="mb-3">
            </div>
            <table id="bidaTableProducts">
                <thead>
                    <tr>
                        <th>STT</th>
                        <th>Tên sản phẩm</th>
                        <th>Lượng tồn đầu kỳ</th>
                        <th>Lượng tồn hiện tại</th>
                        <th>Tổng xuất</th>
                        <th>Doanh thu</th>
                        <th>Vốn</th>
                        <th>Lợi nhuận</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    var tableOrderInfo;
    var tableBidataTable;

    function initializeTable() {
        var columns = [
            {
                targets: 0,
                data: null,
                sortable: false,
                searchable: false,
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                targets: 1,
                data: "date",
                sortable: false,
                render: function (data, type, row) {
                    return (data)
                        ? moment(data).format("DD/MM/YYYY HH:mm")
                        : null;
                }
            },
            {
                targets: 2,
                data: "mainRevenue",
                sortable: false,
                className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            },
            {
                targets: 3, data: "secondaryRevenue", sortable: false, className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            },
            {
                targets: 4, data: "expense", sortable: false, className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            },
            {
                targets: 5, data: "discount", sortable: false, className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            },
            {
                targets: 6, data: "grossProfit", sortable: false, className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            },
            {
                targets: 7,
                data: "status",
                className: "text-right",
                sortable: false,
                render: function (data, type, row) {
                    if (row.status == 0) { // hoàn thành
                        return `<span class="badge badge-success">${row.statusName}</span>`;
                    } else if (data == 1) { // đã hủy
                        return ` <div class="feature-item">
                                                            <button class="badge badge-danger change-status-btn changeInfomation" style="border: none;" >${row.statusName}</button>
                                                    </div>`;
                    }
                    else // đang nợ
                        return ` <div class="feature-item">
                                                            <button class="badge badge-warning change-status-btn" style="border: none;" >${row.statusName}</button>
                                                    </div>`;
                }

            },

        ];

        //var columnsBidataTable = [
        //    {
        //        targets: 0,
        //        data: null,
        //        sortable: false,
        //        searchable: false,
        //        render: function (data, type, row, meta) {
        //            return meta.row + meta.settings._iDisplayStart + 1;
        //        }
        //    },
        //    { targets: 1, data: "bidaTableTypeName", sortable: false },
        //    { targets: 2, data: "bidaTableCode", sortable: false, },
        //    {
        //        targets: 3, data: "price", sortable: false, className: "text-right",
        //        render: function (data, type, row) {
        //            return formatCurrency(data) + ' vnđ'
        //        }
        //    },
        //    {
        //        targets: 4,
        //        data: "totalTime",
        //        className: "text-right",
        //        sortable: false,
        //        render: function (data, type, row, meta) {
        //            return convertTotalTimeToHoursAndMinutes(row.totalTime)
        //        }
        //    },
        //    {
        //        targets: 5,
        //        data: "expense",
        //        className: "text-right",
        //        sortable: false,
        //        render: function (data, type, row, meta) {
        //            return convertDateRangeToHoursAndMinutes(getDataRequest().StartDate, getDataRequest().EndDate)
        //        }
        //    },
        //    {
        //        targets: 6,
        //        data: "totalTime",
        //        className: "text-right",
        //        sortable: false,
        //        render: function (data, type, row, meta) {
        //            return formatProductivityUsing(calculateProductivityUsing(getDataRequest().StartDate, getDataRequest().EndDate, data))
        //        }
        //    },
        //    {
        //        targets: 7,
        //        data: "totalTime",
        //        className: "text-right",
        //        sortable: false,
        //        render: function (data, type, row, meta) {
        //            return generateStarRating(parseFloat(calculateProductivityUsing(getDataRequest().StartDate, getDataRequest().EndDate, data)))
        //        }
        //    }
        //];

        var columnProducts = [
            {
                targets: 0,
                data: null,
                sortable: false,
                searchable: false,
                render: function (data, type, row, meta) {
                    return meta.row + meta.settings._iDisplayStart + 1;
                }
            },
            {
                targets: 1,
                data: "productName",
                sortable: false,
            },
            {
                targets: 2,
                data: "quanlityBefore",
                sortable: false,
                className: "text-right",

            },
            {
                targets: 3, data: "quanlityAfter", sortable: false, className: "text-right",
            },
            {
                targets: 4, data: "quanlity", sortable: false, className: "text-right",

            },
            {
                targets: 5, data: "revenue", sortable: false, className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            },
            {
                targets: 6, data: "expense", sortable: false, className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            },
            {
                targets: 7, data: "grossProfit", sortable: false, className: "text-right",
                render: function (data, type, row) {
                    return formatCurrency(data) + ' vnđ'
                }
            }

        ];

        tableOrderInfo = DataTableUtilsV3.init('#dailyReportTable', '/Report/GetAllOrderInfo', columns, getDataTimeRequest);
        //  tableBidataTable = DataTableUtilsV3.init('#bidaTable', '/Report/CapacityUsingTable', columnsBidataTable, getDataRequest);
        tableBidataTable = DataTableUtilsV3.init('#bidaTableProducts', '/Report/GetAllReportProduct', columnProducts, getDataTimeRequest);

    }
    function getDataRequest() {
        return {
            StartDate: formatDate($('#startDate').val()),
            EndDate: formatDate($('#endDate').val())
        };
    }

    function getDataTimeRequest() {
        var picker = $('#reservationtime').data('daterangepicker');
        return {
            StartDate: formatDateToLocalISOString(picker.startDate),
            EndDate: formatDateToLocalISOString(picker.endDate)
        };
    }

    // Hàm chuyển đổi định dạng ngày
    function formatDate(dateString) {
        if (!dateString) return null;
        var date = new Date(dateString);
        return date.toISOString();
    }
    // Hàm kiểm tra tính hợp lệ của khoảng thời gian
    function isValidDateRange(startDate, endDate) {
        if (!startDate || !endDate) return false;
        var start = new Date(startDate);
        var end = new Date(endDate);
        return start <= end;
    }
    function formatDateToLocalISOString(date) {
        var tzoffset = date.toDate().getTimezoneOffset() * 60000; // offset in milliseconds
        var localISOTime = (new Date(date.toDate().getTime() - tzoffset)).toISOString().slice(0, -1);
        return localISOTime;
    }

    function generateStarRating(percentage) {
        var rating = Math.round(percentage / 20);
        var stars = '';
        for (var i = 1; i <= 5; i++) {
            if (i <= rating) {
                stars += '<i class="fas fa-star" style="color: #ffc107;"></i>';
            } else {
                stars += '<i class="far fa-star" style="color: #ffc107;"></i>';
            }
        }
        return stars;
    }

    $(document).ready(function () {
        $('#reservationtime').on('apply.daterangepicker', function (ev, picker) {
            var startDate = picker.startDate.format('DD/MM/YYYY HH:mm:ss');
            var endDate = picker.endDate.format('DD/MM/YYYY HH:mm:ss');

            console.log('Từ ngày giờ:', startDate);
            console.log('Đến ngày giờ:', endDate);

            getDashboardOverview();
            tableOrderInfo.ajax.reload();
            tableBidataTable.ajax.reload();

            // Bạn có thể sử dụng startDate và endDate ở đây
            // Ví dụ: gửi giá trị đến server, cập nhật UI, v.v.
        });
        var today = new Date();

        // Format ngày thành chuỗi YYYY-MM-DD
        var formattedDate = today.getFullYear() + '-' +
            String(today.getMonth() + 1).padStart(2, '0') + '-' +
            String(today.getDate()).padStart(2, '0');

        // Set giá trị mặc định cho cả hai trường input
        $('#startDate').val(formattedDate);
        $('#endDate').val(formattedDate);

        // khởi tạo table
        initializeTable();



        // Hàm để lấy dữ liệu từ form

        //  const tableBidataTable = DataTableUtilsV3.init('#bidaTable', '/Report/CapacityUsingTable', columnsBidataTable, getDataRequest());



        // Sự kiện khi nhấn nút "Áp dụng"
        $('#applyDateRange').click(function () {
            if (validateDates()) {
                //loadReportData();
                getDashboardOverview();
                tableOrderInfo.ajax.reload();
                tableBidataTable.ajax.reload();

                // getAllReportProduct();

            }
        });

        // Load dữ liệu ban đầu
        // loadReportData();

        getDashboardOverview();
        //  getAllReportProduct();
    });

    // lấy dữ liệu cho dasnhboard
    function getDashboardOverview() {
       var dataRequest =getDataTimeRequest();

        LoadingOverlay.show();
        $.ajax({
            url: '/Report/GetDashboardOverview',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(dataRequest),
            success: function (response) {
                LoadingOverlay.hide();
                if (response.statusCode === 200) {
                    updateLayoutDashboardOverview(response.result);
                } else {
                    toastError('Có lỗi xảy ra khi tải dữ liệu');
                }
            },
            error: function () {
                LoadingOverlay.hide();
                toastError('Có lỗi xảy ra khi kết nối với server');
            }
        });
    }


    function updateLayoutDashboardOverview(data) {
        $('#totalOrders').text(data.totalOrders + ' đơn');
        $('#totalOrderDone').text(data.totalOrderDone + ' đơn');
        $('#totalOrderDebt').text(data.totalOrderDebt + ' đơn');
        $('#totalOrderCancel').text(data.totalOrderCancel + ' đơn');

        $('#profitDone').text(formatCurrency(data.profitDone) + ' vnđ');
        $('#totalRevenueDone').text(formatCurrency(data.totalRevenueDone) + ' vnđ');
        $('#totalDiscountDone').text(formatCurrency(data.totalDiscountDone) + ' vnđ');
        $('#totalPurchaseCostDone').text(formatCurrency(data.totalPurchaseCostDone) + ' vnđ');

        $('#profitDebt').text(formatCurrency(data.profitDebt) + ' vnđ');
        $('#totalRevenueDebt').text(formatCurrency(data.totalRevenueDebt) + ' vnđ');
        $('#totalDiscountDebt').text(formatCurrency(data.totalDiscountDebt) + ' vnđ');
        $('#totalPurchaseCostDebt').text(formatCurrency(data.totalPurchaseCostDebt) + ' vnđ');


        $('#totalMoney').text(formatCurrency(data.totalAmountAfterDiscountDone) + ' vnđ');
        $('#totalTranfer').text(formatCurrency(data.totalTransfer) + ' vnđ');
        $('#totalCash').text(formatCurrency(data.totalCash) + ' vnđ');

    }

    //function loadReportData() {
    //    var startDate = $('#startDate').val();
    //    var endDate = $('#endDate').val();

    //    LoadingOverlay.show(); // Hiển thị loading
    //    $.ajax({
    //        url: '/Report/GetDataOverview',
    //        type: 'POST',
    //        contentType: 'application/json',
    //        data: JSON.stringify({
    //            StartDate: startDate,
    //            EndDate: endDate
    //        }),
    //        success: function (response) {
    //            LoadingOverlay.hide();
    //            if (response.statusCode === 200) {
    //                updateUI(response.result);
    //            } else {
    //                toastError('Có lỗi xảy ra khi tải dữ liệu');
    //            }
    //        },
    //        error: function () {
    //            LoadingOverlay.hide();
    //            toastError('Có lỗi xảy ra khi kết nối với server');
    //        }
    //    });
    //}

    //function updateUI(data) {
    //    $('#totalPlays').text(data.totalPlays + ' đơn');
    //    $('#mainRevenue').text(formatCurrency(data.mainRevenue) + ' vnđ');
    //    $('#secondaryRevenue').text(formatCurrency(data.secondaryRevenue) + ' vnđ');
    //    $('#totalRevenue').text(formatCurrency(data.totalRevenue) + ' vnđ');

    //    updateReportDetailsTable(data.reportDetails);
    //    //updateProductTable(data.reportDetailsProducts);
    //    updateBidaTable(data.reportDetailsBidas);
    //}

    //function updateReportDetailsTable(details) {
    //    var tbody = $('#dailyReportTable tbody');
    //    tbody.empty();
    //    details.forEach(function (detail) {
    //        var row = `<tr>
    //                        <td>${formatDate(detail.date)}</td>
    //                        <td>${formatCurrency(detail.mainRevenue)} đ</td>
    //                        <td>${formatCurrency(detail.secondaryRevenue)} đ</td>
    //                        <td>${formatCurrency(detail.expense)} đ</td>
    //                        <td>${formatCurrency(detail.discount)} đ</td>
    //                        <td>${formatCurrency(detail.grossProfit)} đ</td>
    //                        <td>${calculatePercentage(detail.grossProfit, detail.mainRevenue + detail.secondaryRevenue)}%</td>
    //                    </tr>`;
    //        tbody.append(row);
    //    });
    //}

    //function updateProductTable(products) {
    //    var tbody = $('#productTable tbody');
    //    tbody.empty();
    //    products.forEach(function (product) {
    //        var row = `<tr>
    //                <td>${product.productName}</td>
    //                <td>${product.quanlity}</td>
    //                <td>${formatCurrency(product.revenue)} đ</td>
    //                <td>${formatCurrency(product.grossProfit)} đ</td>
    //            </tr>`;
    //        tbody.append(row);
    //    });
    //}

    function updateBidaTable(bidas) {
        var tbody = $('#bidaTable tbody');
        var startDate = $('#startDate').val();
        var endDate = $('#endDate').val();
        tbody.empty();
        bidas.forEach(function (bida) {
            var totalTimeFormat = convertTotalTimeToHoursAndMinutes(bida.totalTime);
            var realTimeFormat = convertDateRangeToHoursAndMinutes(startDate, endDate);
            //var productivityUsing = formatProductivityUsing(bida.productivityUsing);
            var productivityUsing = calculateProductivityUsing(startDate, endDate, bida.totalTime)
            var productivityUsingFormat = formatProductivityUsing(productivityUsing)
            var row = `<tr>
                                                                                <td>${bida.bidaTableTypeName}</td>
                                                                            <td>${bida.bidaTableCode}</td>

                                                                            <td>${formatCurrency(bida.price)} đ/giờ</td>
                                                                                        <td>${totalTimeFormat}</td>
                                                                                            <td>${realTimeFormat}</td>
                                                                                    <td>${productivityUsingFormat}</td>
                                                                                <td>${generateStarRating(parseFloat(productivityUsing))}</td>
                                                                        </tr>`;
            tbody.append(row);
        });
    }

    //function formatDate(dateString) {
    //    var date = new Date(dateString);
    //    return date.toLocaleDateString('vi-VN');
    //}

    function formatCurrency(amount) {
        return new Intl.NumberFormat('vi-VN').format(amount);
    }

    function calculatePercentage(part, whole) {
        return ((part / whole) * 100).toFixed(2);
    }

    function generateStarRating(percentage) {
        var rating = Math.round(percentage / 20);
        var stars = '';
        for (var i = 1; i <= 5; i++) {
            if (i <= rating) {
                stars += '<i class="fas fa-star" style="color: #ffc107;"></i>';
            } else {
                stars += '<i class="far fa-star" style="color: #ffc107;"></i>';
            }
        }
        return stars;
    }

    // Hàm chuyển đổi định dạng ngày
    function formatDate(dateString) {
        if (!dateString) return null;
        var date = new Date(dateString);
        return date.toISOString();
    }



</script>